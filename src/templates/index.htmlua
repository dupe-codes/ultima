<div class="file-index">

    <h1>{{ dir_name }}</h1>

    <div class="search-container">
        <input type="text" id="search-bar" placeholder="/ to search..." />
        <div id="search-results" class="search-dropdown"></div>
    </div>

    <table class="file-index-table">
        <thead>
            <tr>
                <th>name</th>
                <th>size</th>
                <th>last modified at</th>
            </tr>
        </thead>
        <tbody>
            {% for _, link in ipairs(links) do }}
                <tr>
                    <td>
                        {% local icon = link.metadata.icon or get_default_icon(link.file_type) }}
                        <i class="{{icon}}"></i>
                        <a href="{{ link.link }}">{{ link.display_name }}</a>
                    </td>
                    <td>
                        {{ link.metadata.file_size or "-" }}
                    </td>
                    <td>
                        {{ link.metadata.updated_at or "-" }}
                    </td>
                </tr>
            {% end }}
        </tbody>
    </table>
</div>


{% if all_links then }}
    <script>
        document.addEventListener('DOMContentLoaded', function() \{
            var allLinks = JSON.parse('{{ all_links }}');

            var searchBar = document.getElementById('search-bar');
            var searchResults = document.getElementById('search-results');
            var currentIndex = -1;

            function filterLinks(query) \{
                var matches = [];
                if (query.trim() === '') \{
                    return allLinks;
                }

                query = query.toLowerCase();

                for (var i = 0; i < allLinks.length; i++) \{
                    var link = allLinks[i];
                    if (link.toLowerCase().includes(query)) \{
                        matches.push(link);
                    }
                }
                return matches;
            }

            function highlightText(text, query) \{
                var index = text.toLowerCase().indexOf(query.toLowerCase());
                if (index === -1) \{
                    return text;
                }

                // Split text into three parts: before match, match, after match
                var beforeMatch = text.substring(0, index);
                var matchText = text.substring(index, index + query.length);
                var afterMatch = text.substring(index + query.length);

                // Return a concatenation of parts with <span> for highlighting the match
                return `$\{beforeMatch}<span class="highlight">$\{matchText}</span>$\{afterMatch}`;
            }

            function renderSearchResults(matches, query) \{
                searchResults.innerHTML = '';
                searchResults.style.display = matches.length > 0 ? 'block' : 'none';

                matches.forEach(function(link) \{
                    var resultItem = document.createElement('div');
                    resultItem.className = 'search-result';
                    resultItem.textContent = link;
                    resultItem.innerHTML = highlightText(link, query);

                    resultItem.addEventListener('click', function() \{
                        window.location.href = link;
                    });

                    searchResults.appendChild(resultItem);
                });

                if (matches.length > 0) \{
                    currentIndex = 0;
                    highlightResult(currentIndex);
                } else \{
                    currentIndex = -1;
                }
            }

            function highlightResult(index) \{
                var items = searchResults.getElementsByClassName('search-result');
                for (var i = 0; i < items.length; i++) \{
                    items[i].classList.remove('highlighted');
                }

                if (index >= 0 && index < items.length) \{
                    items[index].classList.add('highlighted');
                    items[index].scrollIntoView(\{ block: 'nearest' });
                }
            }

            searchBar.addEventListener('input', function() \{
                var query = searchBar.value;
                var matches = filterLinks(query);
                renderSearchResults(matches, query);
            });

            searchBar.addEventListener('focus', function() \{
                renderSearchResults(allLinks, '');
            });

            document.addEventListener('keydown', function(event) \{
                if (event.key === '/' && !event.ctrlKey && !event.altKey && !event.metaKey) \{
                    event.preventDefault();
                    searchBar.focus();
                }
            });

            searchResults.addEventListener('mousedown', function(event) \{
                event.preventDefault();
            });

            searchBar.addEventListener('blur', function() \{
                searchResults.style.display = 'none';
                searchBar.value = '';
            });

            searchBar.addEventListener('keydown', function(event) \{
                var items = searchResults.getElementsByClassName('search-result');

                if (event.key === 'ArrowDown') \{
                    event.preventDefault();
                    if (currentIndex < items.length - 1) \{
                        currentIndex++;
                        highlightResult(currentIndex);
                    }
                }

                if (event.key === 'ArrowUp') \{
                    event.preventDefault();
                    if (currentIndex > 0) \{
                        currentIndex--;
                        highlightResult(currentIndex);
                    }
                }

                if (event.key === 'Enter') \{
                    event.preventDefault();
                    if (currentIndex >= 0 && currentIndex < items.length) \{
                        var selectedLink = items[currentIndex].textContent.trim();
                        window.location.href = selectedLink;
                    }
                }
            });
        });
    </script>
{% end }}
